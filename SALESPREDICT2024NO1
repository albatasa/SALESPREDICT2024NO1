# setwd("D:\\kuliah\\semester 5\\BIntelligence\\UAS 1\\")
# Install and load necessary libraries
library(shiny)
library(car)

# Assuming you have a dataset 'data' with appropriate variables
data <- data.frame(
  x1 = c(150000, 160000, 170000, 180000, 190000, 200000, 210000, 220000, 230000, 240000, 250000, 260000),
  x2 = c(8000, 9500, 10000, 10500, 11000, 9000, 11500, 12000, 12500, 13000, 14000, 15000),
  x3 = c(5, 4.5, 4.8, 4.6, 5.1, 4.7, 4.9, 5, 5.2, 5.3, 5.4, 5.5),
  x4 = c(8.5, 8.2, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 8.7, 8.8, 8.9, 9),
  x5 = c(20000, 22000, 25000, 23000, 30000, 28000, 27000, 35000, 40000, 45000, 50000, 60000),
  y = c(120, 150, 160, 165, 180, 170, 190, 210, 230, 250, 300, 350)
)
# Fit regression model
model_regression <- lm(y ~ x1 + x2 + x3 + x4 + x5, data = data)

# Fit ANOVA model
model <- lm(y ~ x1 + x2 + x3 + x4 + x5, data = data)

# Define UI for application that draws a histogram
ui <- fluidPage(
  titlePanel("Sales Prediction"),
  sidebarLayout(
    sidebarPanel(
      numericInput("x1", "Jumlah Pengunjung:", value = 200000),
      numericInput("x2", "Jumlah Transaksi:", value = 12000),
      numericInput("x3", "Rata-rata Barang/Transaksi:", value = 5),
      sliderInput("x4", "Rating Kepuasan:", min = 1, max = 10, value = 8.5),
      numericInput("x5", "Jumlah Iklan:", value = 30000)
    ),
    mainPanel(
      h3("Perkiraan Penjualan (Regression):"),
      verbatimTextOutput("prediction_regression"),
      h3("ANOVA Results:"),
      verbatimTextOutput("anova_results"),
      h3("Model:"),
      verbatimTextOutput("model")
    )
  )
)

server <- function(input, output) {
  # Predict sales using the regression model
  prediction_regression <- reactive({
    predict(model_regression, newdata = data.frame(
      x1 = input$x1,
      x2 = input$x2,
      x3 = input$x3,
      x4 = input$x4,
      x5 = input$x5
    ))
  })
  
  # Display regression prediction
  output$prediction_regression <- renderPrint({
    prediction_regression()
  })
  
  # Display ANOVA results
  output$anova_results <- renderPrint({
    model_regression$coefficients
  })
  
  # Display model summary
  output$model <- renderPrint({
    summary(model)
  })
  
}

# Run Shiny App
shinyApp(ui, server)
